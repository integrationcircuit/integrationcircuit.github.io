"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/Chat/Chat.tsx":
/*!**********************************!*\
  !*** ./components/Chat/Chat.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: function() { return /* binding */ Chat; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var next_i18next__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-i18next */ \"./node_modules/next-i18next/dist/esm/index.js\");\n/* harmony import */ var _utils_app_conversation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/app/conversation */ \"./utils/app/conversation.ts\");\n/* harmony import */ var _utils_data_throttle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/utils/data/throttle */ \"./utils/data/throttle.ts\");\n/* harmony import */ var _pages_api_home_home_context__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/pages/api/home/home.context */ \"./pages/api/home/home.context.tsx\");\n/* harmony import */ var _ChatInput__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ChatInput */ \"./components/Chat/ChatInput.tsx\");\n/* harmony import */ var _ChatLoader__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ChatLoader */ \"./components/Chat/ChatLoader.tsx\");\n/* harmony import */ var _MemoizedChatMessage__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./MemoizedChatMessage */ \"./components/Chat/MemoizedChatMessage.tsx\");\n/* harmony import */ var _Logo__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Logo */ \"./components/Chat/Logo.tsx\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\nconst Chat = /*#__PURE__*/ _s((0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(_c = _s((param)=>{\n    let { stopConversationRef } = param;\n    var _selectedConversation_messages;\n    _s();\n    const { t } = (0,next_i18next__WEBPACK_IMPORTED_MODULE_3__.useTranslation)(\"chat\");\n    const { state: { selectedConversation, conversations, loading }, handleUpdateConversation, dispatch: homeDispatch } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_pages_api_home_home_context__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n    const [currentMessage, setCurrentMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [autoScrollEnabled, setAutoScrollEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [showSettings, setShowSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showScrollDownButton, setShowScrollDownButton] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isTyping, setIsTyping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [animatedMessage, setAnimatedMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [showLogo, setShowLogo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const lastScrollY = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const messagesEndRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const chatContainerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const textareaRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const handleSend = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async function(message) {\n        let deleteCount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, plugin = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n        if (selectedConversation) {\n            let updatedConversation;\n            if (deleteCount) {\n                const updatedMessages = [\n                    ...selectedConversation.messages\n                ];\n                for(let i = 0; i < deleteCount; i++){\n                    updatedMessages.pop();\n                }\n                updatedConversation = {\n                    ...selectedConversation,\n                    messages: [\n                        ...updatedMessages,\n                        message\n                    ]\n                };\n            } else {\n                updatedConversation = {\n                    ...selectedConversation,\n                    messages: [\n                        ...selectedConversation.messages,\n                        message\n                    ]\n                };\n            }\n            homeDispatch({\n                field: \"selectedConversation\",\n                value: updatedConversation\n            });\n            homeDispatch({\n                field: \"loading\",\n                value: true\n            });\n            homeDispatch({\n                field: \"messageIsStreaming\",\n                value: true\n            });\n            const chatBody = {\n                messages: updatedConversation.messages\n            };\n            var _localStorage_getItem;\n            //const endpoint = process.env.NEXT_PUBLIC_API_ENDPOINT;\n            //const bearerToken = process.env.NEXT_PUBLIC_BEARER_TOKEN;\n            //const endpoint = 'https://snapgpt.labs.snaplogicdev.com/api/1/rest/slsched/feed/snaplogic/se-demo/shared/hr_demo_se_team_task';\n            //const bearerToken = 'OiEVMJqdIJJJeD2wmlzGdAFuOlW92N7R';\n            let endpoint = (_localStorage_getItem = localStorage.getItem(\"userUri\")) !== null && _localStorage_getItem !== void 0 ? _localStorage_getItem : \"\";\n            var _localStorage_getItem1;\n            let bearerToken = (_localStorage_getItem1 = localStorage.getItem(\"userToken\")) !== null && _localStorage_getItem1 !== void 0 ? _localStorage_getItem1 : \"\";\n            console.log(\"endpoint: \", endpoint);\n            console.log(\"bearerToken: \", bearerToken);\n            console.log(\"process.env.NEXT_PUBLIC_API_ENDPOINT\", process.env.NEXT_PUBLIC_API_ENDPOINT);\n            console.log(\"process.env.NEXT_PUBLIC_BEARER_TOKEN\", process.env.NEXT_PUBLIC_BEARER_TOKEN);\n            if (typeof endpoint === \"undefined\" || typeof bearerToken === \"undefined\") {\n                throw new Error(\"NEXT_PUBLIC_API_ENDPOINT or NEXT_PUBLIC_BEARER_TOKEN is not defined\");\n            }\n            let body;\n            const jsonRequest = {\n                \"source\": null,\n                \"prompt\": message[\"content\"]\n            };\n            const controller = new AbortController();\n            console.log(\"jsonContent\", jsonRequest);\n            body = JSON.stringify(jsonRequest);\n            const response = await fetch(endpoint, {\n                method: \"POST\",\n                mode: \"no-cors\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \".concat(bearerToken)\n                },\n                signal: controller.signal,\n                body\n            });\n            if (!response.ok) {\n                console.log(\"nonono !response.ok\");\n                homeDispatch({\n                    field: \"loading\",\n                    value: false\n                });\n                homeDispatch({\n                    field: \"messageIsStreaming\",\n                    value: false\n                });\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error(response.statusText);\n                return;\n            }\n            const data = response.body;\n            if (!data) {\n                homeDispatch({\n                    field: \"loading\",\n                    value: false\n                });\n                homeDispatch({\n                    field: \"messageIsStreaming\",\n                    value: false\n                });\n                return;\n            } else {\n                var _baseAnswer_choices_;\n                const jsonResponse = await response.json();\n                console.log(\"jsonResponse\", jsonResponse);\n                /*For old llm snaps, please use this line */ // let answer: string = jsonResponse[0].choices[0].content as string; \n                /*For new llm snappakcs, please use this line */ console.log(jsonResponse[0]);\n                // STAN\n                // let answer: string = jsonResponse[0].choices[0].message.content as string;\n                // ROGER\n                let answer = jsonResponse[0].completion;\n                //let answer: string = jsonResponse[0];\n                // START STAN\n                let baseAnswer = jsonResponse[0];\n                let finalAnswer = \"\";\n                if ((_baseAnswer_choices_ = baseAnswer.choices[0]) === null || _baseAnswer_choices_ === void 0 ? void 0 : _baseAnswer_choices_.content) {\n                    finalAnswer = baseAnswer.choices[0].content;\n                } else if (baseAnswer.completion) {\n                    finalAnswer = baseAnswer.completion;\n                } else {\n                    finalAnswer = baseAnswer;\n                }\n                answer = finalAnswer;\n                // END STAN\n                console.log(\"LLM snap answer: \", answer);\n                // **************Redline*****************\n                // render answer with Red Line use case\n                if (answer !== null && answer.includes(\"[Red Line]\")) {\n                    // Disable potential HTML tags from original answer to avoid XSS Attack\n                    answer.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n                    // Split the answer into sentences\n                    const sentences = answer.split(RegExp(\"(?<!\\\\s\\\\.)([.!?])\"));\n                    // Identify sentences after [Red Line] and wrap them in a span with a red underline\n                    answer = sentences.map((sentence)=>{\n                        console.log(\"sentence: \", sentence);\n                        if (sentence.includes(\"[Red Line]\")) {\n                            const [, restOfSentence] = sentence.split(\"[Red Line]\");\n                            return ' <span style=\"border-bottom: 2px solid red;\">'.concat(restOfSentence.trim(), \"</span>\");\n                        } else {\n                            return sentence;\n                        }\n                    }).join(\"\");\n                    console.log(\"Rendered HTML result with red line: \", answer);\n                }\n                // **************Redline*****************\n                const updatedMessages = [\n                    ...updatedConversation.messages,\n                    {\n                        role: \"assistant\",\n                        content: answer\n                    }\n                ];\n                updatedConversation = {\n                    ...updatedConversation,\n                    messages: updatedMessages\n                };\n                homeDispatch({\n                    field: \"selectedConversation\",\n                    value: updatedConversation\n                });\n                (0,_utils_app_conversation__WEBPACK_IMPORTED_MODULE_4__.saveConversation)(updatedConversation);\n                const updatedConversations = conversations.map((conversation)=>{\n                    if (conversation.id === selectedConversation.id) {\n                        return updatedConversation;\n                    }\n                    return conversation;\n                });\n                if (updatedConversations.length === 0) {\n                    updatedConversations.push(updatedConversation);\n                }\n                homeDispatch({\n                    field: \"conversations\",\n                    value: updatedConversations\n                });\n                (0,_utils_app_conversation__WEBPACK_IMPORTED_MODULE_4__.saveConversations)(updatedConversations);\n                homeDispatch({\n                    field: \"loading\",\n                    value: false\n                });\n                homeDispatch({\n                    field: \"messageIsStreaming\",\n                    value: false\n                });\n            }\n        }\n    }, [\n        conversations,\n        selectedConversation,\n        stopConversationRef\n    ]);\n    const handleScroll = ()=>{\n        if (chatContainerRef.current) {\n            const { scrollTop, scrollHeight, clientHeight } = chatContainerRef.current;\n            const bottomTolerance = 30;\n            if (scrollTop + clientHeight < scrollHeight - bottomTolerance) {\n                setAutoScrollEnabled(false);\n                setShowScrollDownButton(true);\n            } else {\n                setAutoScrollEnabled(true);\n                setShowScrollDownButton(false);\n            }\n        }\n    };\n    const handleScrollDown = ()=>{\n        var _chatContainerRef_current;\n        (_chatContainerRef_current = chatContainerRef.current) === null || _chatContainerRef_current === void 0 ? void 0 : _chatContainerRef_current.scrollTo({\n            top: chatContainerRef.current.scrollHeight,\n            behavior: \"smooth\"\n        });\n    };\n    const handleSettings = ()=>{\n        setShowSettings(!showSettings);\n    };\n    const scrollDown = ()=>{\n        if (autoScrollEnabled) {\n            var _messagesEndRef_current;\n            (_messagesEndRef_current = messagesEndRef.current) === null || _messagesEndRef_current === void 0 ? void 0 : _messagesEndRef_current.scrollIntoView(true);\n        }\n    };\n    const throttledScrollDown = (0,_utils_data_throttle__WEBPACK_IMPORTED_MODULE_5__.throttle)(scrollDown, 250);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        throttledScrollDown();\n        selectedConversation && selectedConversation.messages && setCurrentMessage(selectedConversation.messages[selectedConversation.messages.length - 2]);\n    }, [\n        selectedConversation,\n        throttledScrollDown\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const observer = new IntersectionObserver((param)=>{\n            let [entry] = param;\n            setAutoScrollEnabled(entry.isIntersecting);\n            if (entry.isIntersecting) {\n                var _textareaRef_current;\n                (_textareaRef_current = textareaRef.current) === null || _textareaRef_current === void 0 ? void 0 : _textareaRef_current.focus();\n            }\n        }, {\n            root: null,\n            threshold: 0.5\n        });\n        const messagesEndElement = messagesEndRef.current;\n        if (messagesEndElement) {\n            observer.observe(messagesEndElement);\n        }\n        return ()=>{\n            if (messagesEndElement) {\n                observer.unobserve(messagesEndElement);\n            }\n        };\n    }, [\n        messagesEndRef\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative flex-1 overflow-hidden bg-white dark:bg-[#343d62]\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-h-full overflow-x-hidden\",\n                ref: chatContainerRef,\n                onScroll: handleScroll,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Logo__WEBPACK_IMPORTED_MODULE_10__.Logo, {}, void 0, false, {\n                        fileName: \"/Users/stan/Projects/integrationcircuit.github.io/components/Chat/Chat.tsx\",\n                        lineNumber: 301,\n                        columnNumber: 9\n                    }, undefined),\n                    selectedConversation === null || selectedConversation === void 0 ? void 0 : (_selectedConversation_messages = selectedConversation.messages) === null || _selectedConversation_messages === void 0 ? void 0 : _selectedConversation_messages.map((message, index)=>{\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MemoizedChatMessage__WEBPACK_IMPORTED_MODULE_9__.MemoizedChatMessage, {\n                            message: message,\n                            messageIndex: index\n                        }, index, false, {\n                            fileName: \"/Users/stan/Projects/integrationcircuit.github.io/components/Chat/Chat.tsx\",\n                            lineNumber: 304,\n                            columnNumber: 13\n                        }, undefined);\n                    }),\n                    loading && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChatLoader__WEBPACK_IMPORTED_MODULE_8__.ChatLoader, {}, void 0, false, {\n                        fileName: \"/Users/stan/Projects/integrationcircuit.github.io/components/Chat/Chat.tsx\",\n                        lineNumber: 311,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"h-[162px] bg-white dark:bg-[#343d62]\",\n                        ref: messagesEndRef\n                    }, void 0, false, {\n                        fileName: \"/Users/stan/Projects/integrationcircuit.github.io/components/Chat/Chat.tsx\",\n                        lineNumber: 313,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/stan/Projects/integrationcircuit.github.io/components/Chat/Chat.tsx\",\n                lineNumber: 296,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChatInput__WEBPACK_IMPORTED_MODULE_7__.ChatInput, {\n                stopConversationRef: stopConversationRef,\n                textareaRef: textareaRef,\n                onSend: (message, plugin)=>{\n                    setCurrentMessage(message);\n                    handleSend(message, 0, plugin);\n                },\n                onScrollDownClick: handleScrollDown,\n                onRegenerate: ()=>{\n                    if (currentMessage) {\n                        handleSend(currentMessage, 2, null);\n                    }\n                },\n                showScrollDownButton: showScrollDownButton\n            }, void 0, false, {\n                fileName: \"/Users/stan/Projects/integrationcircuit.github.io/components/Chat/Chat.tsx\",\n                lineNumber: 319,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/stan/Projects/integrationcircuit.github.io/components/Chat/Chat.tsx\",\n        lineNumber: 295,\n        columnNumber: 5\n    }, undefined);\n}, \"1irGp3IXnApxqYGaOjvH2vBDmz8=\", false, function() {\n    return [\n        next_i18next__WEBPACK_IMPORTED_MODULE_3__.useTranslation\n    ];\n})), \"1irGp3IXnApxqYGaOjvH2vBDmz8=\", false, function() {\n    return [\n        next_i18next__WEBPACK_IMPORTED_MODULE_3__.useTranslation\n    ];\n});\n_c1 = Chat;\nChat.displayName = \"Chat\";\nvar _c, _c1;\n$RefreshReg$(_c, \"Chat$memo\");\n$RefreshReg$(_c1, \"Chat\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/Chat/Chat.tsx\n"));

/***/ })

});